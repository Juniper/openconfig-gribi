// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.7
// source: github.com/openconfig/gribi/proto/service/gribi.proto

package gribi

import (
	gribi_aft "github.com/openconfig/gribi/proto/gribi_aft"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The operation that this request is - either add, replace, or delete
// any entry from the specific AFT.
type AFTOperation_Operation int32

const (
	// INVALID indicates that the sender did not set the operation, and
	// should be considered an error.
	AFTOperation_INVALID AFTOperation_Operation = 0
	// ADD creates an entry within the table, it should fail if the entry
	// already exists.
	AFTOperation_ADD AFTOperation_Operation = 1
	// REPLACE replaces an existing entry within a table, it should fail if
	// the entry does not exist. A replace operation should contain all of
	// the relevant fields, such that existing entry is completely replaced
	// with the specified entry.
	AFTOperation_REPLACE AFTOperation_Operation = 2
	// DELETE removes an entry from the table, it should fail if the entry
	// does not exist.
	AFTOperation_DELETE AFTOperation_Operation = 3
)

// Enum value maps for AFTOperation_Operation.
var (
	AFTOperation_Operation_name = map[int32]string{
		0: "INVALID",
		1: "ADD",
		2: "REPLACE",
		3: "DELETE",
	}
	AFTOperation_Operation_value = map[string]int32{
		"INVALID": 0,
		"ADD":     1,
		"REPLACE": 2,
		"DELETE":  3,
	}
)

func (x AFTOperation_Operation) Enum() *AFTOperation_Operation {
	p := new(AFTOperation_Operation)
	*p = x
	return p
}

func (x AFTOperation_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AFTOperation_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_enumTypes[0].Descriptor()
}

func (AFTOperation_Operation) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gribi_proto_service_gribi_proto_enumTypes[0]
}

func (x AFTOperation_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AFTOperation_Operation.Descriptor instead.
func (AFTOperation_Operation) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP(), []int{1, 0}
}

// Status of the operation. Since this is within a
// stream we do not use status.proto to respond since
// this would fail the entire RPC connection, and hence
// have in-band errors.
type AFTResult_Status int32

const (
	AFTResult_UNSET  AFTResult_Status = 0
	AFTResult_OK     AFTResult_Status = 1
	AFTResult_FAILED AFTResult_Status = 2
)

// Enum value maps for AFTResult_Status.
var (
	AFTResult_Status_name = map[int32]string{
		0: "UNSET",
		1: "OK",
		2: "FAILED",
	}
	AFTResult_Status_value = map[string]int32{
		"UNSET":  0,
		"OK":     1,
		"FAILED": 2,
	}
)

func (x AFTResult_Status) Enum() *AFTResult_Status {
	p := new(AFTResult_Status)
	*p = x
	return p
}

func (x AFTResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AFTResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_enumTypes[1].Descriptor()
}

func (AFTResult_Status) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gribi_proto_service_gribi_proto_enumTypes[1]
}

func (x AFTResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AFTResult_Status.Descriptor instead.
func (AFTResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP(), []int{3, 0}
}

// ModifyRequest is a message used by the client to manipulate the state of
// the RIB on the target device.
type ModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A group of requests to add/modify/remove a single AFT entry
	Operation []*AFTOperation `protobuf:"bytes,1,rep,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ModifyRequest) Reset() {
	*x = ModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyRequest) ProtoMessage() {}

func (x *ModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyRequest.ProtoReflect.Descriptor instead.
func (*ModifyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP(), []int{0}
}

func (x *ModifyRequest) GetOperation() []*AFTOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// A single request to add/modify/remove a single AFT entry
type AFTOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Associate an ID with this specific request since this allows the client
	// to determine exactly which modifications have been completed in the
	// case that are multiple operations within the AFT.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Network Instance (aka vrf aka routing-instance) to apply to
	NetworkInstance string                 `protobuf:"bytes,2,opt,name=network_instance,json=networkInstance,proto3" json:"network_instance,omitempty"`
	Op              AFTOperation_Operation `protobuf:"varint,3,opt,name=op,proto3,enum=gribi.AFTOperation_Operation" json:"op,omitempty"`
	// Types that are assignable to Entry:
	//	*AFTOperation_Ipv4
	//	*AFTOperation_Ipv6
	//	*AFTOperation_Mpls
	//	*AFTOperation_NextHopGroup
	//	*AFTOperation_NextHop
	Entry isAFTOperation_Entry `protobuf_oneof:"entry"`
}

func (x *AFTOperation) Reset() {
	*x = AFTOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AFTOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AFTOperation) ProtoMessage() {}

func (x *AFTOperation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AFTOperation.ProtoReflect.Descriptor instead.
func (*AFTOperation) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP(), []int{1}
}

func (x *AFTOperation) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AFTOperation) GetNetworkInstance() string {
	if x != nil {
		return x.NetworkInstance
	}
	return ""
}

func (x *AFTOperation) GetOp() AFTOperation_Operation {
	if x != nil {
		return x.Op
	}
	return AFTOperation_INVALID
}

func (m *AFTOperation) GetEntry() isAFTOperation_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *AFTOperation) GetIpv4() *gribi_aft.Afts_Ipv4EntryKey {
	if x, ok := x.GetEntry().(*AFTOperation_Ipv4); ok {
		return x.Ipv4
	}
	return nil
}

func (x *AFTOperation) GetIpv6() *gribi_aft.Afts_Ipv6EntryKey {
	if x, ok := x.GetEntry().(*AFTOperation_Ipv6); ok {
		return x.Ipv6
	}
	return nil
}

func (x *AFTOperation) GetMpls() *gribi_aft.Afts_LabelEntryKey {
	if x, ok := x.GetEntry().(*AFTOperation_Mpls); ok {
		return x.Mpls
	}
	return nil
}

func (x *AFTOperation) GetNextHopGroup() *gribi_aft.Afts_NextHopGroupKey {
	if x, ok := x.GetEntry().(*AFTOperation_NextHopGroup); ok {
		return x.NextHopGroup
	}
	return nil
}

func (x *AFTOperation) GetNextHop() *gribi_aft.Afts_NextHopKey {
	if x, ok := x.GetEntry().(*AFTOperation_NextHop); ok {
		return x.NextHop
	}
	return nil
}

type isAFTOperation_Entry interface {
	isAFTOperation_Entry()
}

type AFTOperation_Ipv4 struct {
	// Each openconfig.AFT.* message is a protobuf transformed
	// message corresponding to the OpenConfig AFT for that
	// schema.
	// Schema for IPv4UnicastEntry is generated from
	// /network-instances/network-instance/afts/ipv4-unicast/ipv4-entry
	Ipv4 *gribi_aft.Afts_Ipv4EntryKey `protobuf:"bytes,4,opt,name=ipv4,proto3,oneof"`
}

type AFTOperation_Ipv6 struct {
	// Schema for IPv6UnicastEntry is generated from
	// /network-instances/network-instance/afts/ipv6-unicast/ipv6-entry
	Ipv6 *gribi_aft.Afts_Ipv6EntryKey `protobuf:"bytes,5,opt,name=ipv6,proto3,oneof"`
}

type AFTOperation_Mpls struct {
	// Schema for MPLSLabelEntry is generated from
	// /network-instances/network-instance/afts/mpls/label-entry
	Mpls *gribi_aft.Afts_LabelEntryKey `protobuf:"bytes,6,opt,name=mpls,proto3,oneof"`
}

type AFTOperation_NextHopGroup struct {
	// Schema for NextHopGroup is generated from
	// /network-instances/network-instance/afts/next-hop-groups/next-hop-group
	NextHopGroup *gribi_aft.Afts_NextHopGroupKey `protobuf:"bytes,7,opt,name=next_hop_group,json=nextHopGroup,proto3,oneof"`
}

type AFTOperation_NextHop struct {
	// Schema for NextHop is generated from
	// /network-instances/network-instance/afts/next-hops/next-hop.
	NextHop *gribi_aft.Afts_NextHopKey `protobuf:"bytes,8,opt,name=next_hop,json=nextHop,proto3,oneof"`
}

func (*AFTOperation_Ipv4) isAFTOperation_Entry() {}

func (*AFTOperation_Ipv6) isAFTOperation_Entry() {}

func (*AFTOperation_Mpls) isAFTOperation_Entry() {}

func (*AFTOperation_NextHopGroup) isAFTOperation_Entry() {}

func (*AFTOperation_NextHop) isAFTOperation_Entry() {}

// A set of AFT responses.
type ModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One or more responses to requests. Clients should expect that
	// the ModifyResponse *does not* correlate to the ModifyRequest’s
	// contents.
	Result []*AFTResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ModifyResponse) Reset() {
	*x = ModifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyResponse) ProtoMessage() {}

func (x *ModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyResponse.ProtoReflect.Descriptor instead.
func (*ModifyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP(), []int{2}
}

func (x *ModifyResponse) GetResult() []*AFTResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// A response to add/modify/remove a single AFT entry
type AFTResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID corresponds to the operation ID that was
	// specified in the AFTOperation.
	Id     uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status AFTResult_Status `protobuf:"varint,2,opt,name=status,proto3,enum=gribi.AFTResult_Status" json:"status,omitempty"`
}

func (x *AFTResult) Reset() {
	*x = AFTResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AFTResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AFTResult) ProtoMessage() {}

func (x *AFTResult) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AFTResult.ProtoReflect.Descriptor instead.
func (*AFTResult) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP(), []int{3}
}

func (x *AFTResult) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AFTResult) GetStatus() AFTResult_Status {
	if x != nil {
		return x.Status
	}
	return AFTResult_UNSET
}

var File_github_com_openconfig_gribi_proto_service_gribi_proto protoreflect.FileDescriptor

var file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDesc = []byte{
	0x0a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x72, 0x69, 0x62,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67, 0x72, 0x69, 0x62, 0x69, 0x1a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x72, 0x69, 0x62, 0x69, 0x5f, 0x61, 0x66, 0x74, 0x2f, 0x67, 0x72, 0x69, 0x62,
	0x69, 0x5f, 0x61, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x0d, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2e, 0x41, 0x46, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xdc, 0x03, 0x0a, 0x0c, 0x41, 0x46, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x02, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2e,
	0x41, 0x46, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x70,
	0x76, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69,
	0x5f, 0x61, 0x66, 0x74, 0x2e, 0x41, 0x66, 0x74, 0x73, 0x2e, 0x49, 0x70, 0x76, 0x34, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x32,
	0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x72, 0x69, 0x62, 0x69, 0x5f, 0x61, 0x66, 0x74, 0x2e, 0x41, 0x66, 0x74, 0x73, 0x2e, 0x49, 0x70,
	0x76, 0x36, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x04, 0x69, 0x70,
	0x76, 0x36, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x70, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x5f, 0x61, 0x66, 0x74, 0x2e, 0x41, 0x66, 0x74,
	0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x6d, 0x70, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x68, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x5f, 0x61, 0x66, 0x74, 0x2e, 0x41, 0x66, 0x74, 0x73,
	0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79,
	0x48, 0x00, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x37, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x5f, 0x61, 0x66, 0x74, 0x2e, 0x41,
	0x66, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x4b, 0x65, 0x79, 0x48, 0x00,
	0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x22, 0x3a, 0x0a, 0x09, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x03, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3a,
	0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2e, 0x41, 0x46, 0x54, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x75, 0x0a, 0x09, 0x41, 0x46,
	0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2e,
	0x41, 0x46, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x32, 0x42, 0x0a, 0x05, 0x67, 0x52, 0x49, 0x42, 0x49, 0x12, 0x39, 0x0a, 0x06, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x69, 0x62, 0x69, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x72, 0x69,
	0x62, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67,
	0x72, 0x69, 0x62, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x3b, 0x67, 0x72, 0x69, 0x62, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescData = file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDesc
)

func file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescData)
	})
	return file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDescData
}

var file_github_com_openconfig_gribi_proto_service_gribi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_openconfig_gribi_proto_service_gribi_proto_goTypes = []interface{}{
	(AFTOperation_Operation)(0),            // 0: gribi.AFTOperation.Operation
	(AFTResult_Status)(0),                  // 1: gribi.AFTResult.Status
	(*ModifyRequest)(nil),                  // 2: gribi.ModifyRequest
	(*AFTOperation)(nil),                   // 3: gribi.AFTOperation
	(*ModifyResponse)(nil),                 // 4: gribi.ModifyResponse
	(*AFTResult)(nil),                      // 5: gribi.AFTResult
	(*gribi_aft.Afts_Ipv4EntryKey)(nil),    // 6: gribi_aft.Afts.Ipv4EntryKey
	(*gribi_aft.Afts_Ipv6EntryKey)(nil),    // 7: gribi_aft.Afts.Ipv6EntryKey
	(*gribi_aft.Afts_LabelEntryKey)(nil),   // 8: gribi_aft.Afts.LabelEntryKey
	(*gribi_aft.Afts_NextHopGroupKey)(nil), // 9: gribi_aft.Afts.NextHopGroupKey
	(*gribi_aft.Afts_NextHopKey)(nil),      // 10: gribi_aft.Afts.NextHopKey
}
var file_github_com_openconfig_gribi_proto_service_gribi_proto_depIdxs = []int32{
	3,  // 0: gribi.ModifyRequest.operation:type_name -> gribi.AFTOperation
	0,  // 1: gribi.AFTOperation.op:type_name -> gribi.AFTOperation.Operation
	6,  // 2: gribi.AFTOperation.ipv4:type_name -> gribi_aft.Afts.Ipv4EntryKey
	7,  // 3: gribi.AFTOperation.ipv6:type_name -> gribi_aft.Afts.Ipv6EntryKey
	8,  // 4: gribi.AFTOperation.mpls:type_name -> gribi_aft.Afts.LabelEntryKey
	9,  // 5: gribi.AFTOperation.next_hop_group:type_name -> gribi_aft.Afts.NextHopGroupKey
	10, // 6: gribi.AFTOperation.next_hop:type_name -> gribi_aft.Afts.NextHopKey
	5,  // 7: gribi.ModifyResponse.result:type_name -> gribi.AFTResult
	1,  // 8: gribi.AFTResult.status:type_name -> gribi.AFTResult.Status
	2,  // 9: gribi.gRIBI.Modify:input_type -> gribi.ModifyRequest
	4,  // 10: gribi.gRIBI.Modify:output_type -> gribi.ModifyResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gribi_proto_service_gribi_proto_init() }
func file_github_com_openconfig_gribi_proto_service_gribi_proto_init() {
	if File_github_com_openconfig_gribi_proto_service_gribi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AFTOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AFTResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AFTOperation_Ipv4)(nil),
		(*AFTOperation_Ipv6)(nil),
		(*AFTOperation_Mpls)(nil),
		(*AFTOperation_NextHopGroup)(nil),
		(*AFTOperation_NextHop)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gribi_proto_service_gribi_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gribi_proto_service_gribi_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gribi_proto_service_gribi_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gribi_proto_service_gribi_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gribi_proto_service_gribi_proto = out.File
	file_github_com_openconfig_gribi_proto_service_gribi_proto_rawDesc = nil
	file_github_com_openconfig_gribi_proto_service_gribi_proto_goTypes = nil
	file_github_com_openconfig_gribi_proto_service_gribi_proto_depIdxs = nil
}
