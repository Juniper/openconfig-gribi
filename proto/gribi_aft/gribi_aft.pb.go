// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openconfig/gribi/proto/gribi_aft/gribi_aft.proto

/*
Package gribi_aft is a generated protocol buffer package.

It is generated from these files:
	github.com/openconfig/gribi/proto/gribi_aft/gribi_aft.proto

It has these top-level messages:
	Device
	Afts
*/
package gribi_aft

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import ywrapper "github.com/openconfig/ygot/proto/ywrapper"
import _ "github.com/openconfig/ygot/proto/yext"
import gribi_aft_enums "github.com/openconfig/gribi/proto/gribi_aft/enums"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Afts_LabelEntry_PoppedMplsLabelStack int32

const (
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_UNSET                   Afts_LabelEntry_PoppedMplsLabelStack = 0
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_IPV4_EXPLICIT_NULL      Afts_LabelEntry_PoppedMplsLabelStack = 1
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_ROUTER_ALERT            Afts_LabelEntry_PoppedMplsLabelStack = 2
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_IPV6_EXPLICIT_NULL      Afts_LabelEntry_PoppedMplsLabelStack = 3
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_IMPLICIT_NULL           Afts_LabelEntry_PoppedMplsLabelStack = 4
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_ENTROPY_LABEL_INDICATOR Afts_LabelEntry_PoppedMplsLabelStack = 8
	Afts_LabelEntry_POPPEDMPLSLABELSTACK_NO_LABEL                Afts_LabelEntry_PoppedMplsLabelStack = 9
)

var Afts_LabelEntry_PoppedMplsLabelStack_name = map[int32]string{
	0: "POPPEDMPLSLABELSTACK_UNSET",
	1: "POPPEDMPLSLABELSTACK_IPV4_EXPLICIT_NULL",
	2: "POPPEDMPLSLABELSTACK_ROUTER_ALERT",
	3: "POPPEDMPLSLABELSTACK_IPV6_EXPLICIT_NULL",
	4: "POPPEDMPLSLABELSTACK_IMPLICIT_NULL",
	8: "POPPEDMPLSLABELSTACK_ENTROPY_LABEL_INDICATOR",
	9: "POPPEDMPLSLABELSTACK_NO_LABEL",
}
var Afts_LabelEntry_PoppedMplsLabelStack_value = map[string]int32{
	"POPPEDMPLSLABELSTACK_UNSET":                   0,
	"POPPEDMPLSLABELSTACK_IPV4_EXPLICIT_NULL":      1,
	"POPPEDMPLSLABELSTACK_ROUTER_ALERT":            2,
	"POPPEDMPLSLABELSTACK_IPV6_EXPLICIT_NULL":      3,
	"POPPEDMPLSLABELSTACK_IMPLICIT_NULL":           4,
	"POPPEDMPLSLABELSTACK_ENTROPY_LABEL_INDICATOR": 8,
	"POPPEDMPLSLABELSTACK_NO_LABEL":                9,
}

func (x Afts_LabelEntry_PoppedMplsLabelStack) String() string {
	return proto.EnumName(Afts_LabelEntry_PoppedMplsLabelStack_name, int32(x))
}
func (Afts_LabelEntry_PoppedMplsLabelStack) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 4, 0}
}

type Afts_LabelEntryKey_Label int32

const (
	Afts_LabelEntryKey_LABEL_UNSET                   Afts_LabelEntryKey_Label = 0
	Afts_LabelEntryKey_LABEL_IPV4_EXPLICIT_NULL      Afts_LabelEntryKey_Label = 1
	Afts_LabelEntryKey_LABEL_ROUTER_ALERT            Afts_LabelEntryKey_Label = 2
	Afts_LabelEntryKey_LABEL_IPV6_EXPLICIT_NULL      Afts_LabelEntryKey_Label = 3
	Afts_LabelEntryKey_LABEL_IMPLICIT_NULL           Afts_LabelEntryKey_Label = 4
	Afts_LabelEntryKey_LABEL_ENTROPY_LABEL_INDICATOR Afts_LabelEntryKey_Label = 8
	Afts_LabelEntryKey_LABEL_NO_LABEL                Afts_LabelEntryKey_Label = 9
)

var Afts_LabelEntryKey_Label_name = map[int32]string{
	0: "LABEL_UNSET",
	1: "LABEL_IPV4_EXPLICIT_NULL",
	2: "LABEL_ROUTER_ALERT",
	3: "LABEL_IPV6_EXPLICIT_NULL",
	4: "LABEL_IMPLICIT_NULL",
	8: "LABEL_ENTROPY_LABEL_INDICATOR",
	9: "LABEL_NO_LABEL",
}
var Afts_LabelEntryKey_Label_value = map[string]int32{
	"LABEL_UNSET":                   0,
	"LABEL_IPV4_EXPLICIT_NULL":      1,
	"LABEL_ROUTER_ALERT":            2,
	"LABEL_IPV6_EXPLICIT_NULL":      3,
	"LABEL_IMPLICIT_NULL":           4,
	"LABEL_ENTROPY_LABEL_INDICATOR": 8,
	"LABEL_NO_LABEL":                9,
}

func (x Afts_LabelEntryKey_Label) String() string {
	return proto.EnumName(Afts_LabelEntryKey_Label_name, int32(x))
}
func (Afts_LabelEntryKey_Label) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 5, 0}
}

type Afts_NextHop_PushedMplsLabelStack int32

const (
	Afts_NextHop_PUSHEDMPLSLABELSTACK_UNSET                   Afts_NextHop_PushedMplsLabelStack = 0
	Afts_NextHop_PUSHEDMPLSLABELSTACK_IPV4_EXPLICIT_NULL      Afts_NextHop_PushedMplsLabelStack = 1
	Afts_NextHop_PUSHEDMPLSLABELSTACK_ROUTER_ALERT            Afts_NextHop_PushedMplsLabelStack = 2
	Afts_NextHop_PUSHEDMPLSLABELSTACK_IPV6_EXPLICIT_NULL      Afts_NextHop_PushedMplsLabelStack = 3
	Afts_NextHop_PUSHEDMPLSLABELSTACK_IMPLICIT_NULL           Afts_NextHop_PushedMplsLabelStack = 4
	Afts_NextHop_PUSHEDMPLSLABELSTACK_ENTROPY_LABEL_INDICATOR Afts_NextHop_PushedMplsLabelStack = 8
	Afts_NextHop_PUSHEDMPLSLABELSTACK_NO_LABEL                Afts_NextHop_PushedMplsLabelStack = 9
)

var Afts_NextHop_PushedMplsLabelStack_name = map[int32]string{
	0: "PUSHEDMPLSLABELSTACK_UNSET",
	1: "PUSHEDMPLSLABELSTACK_IPV4_EXPLICIT_NULL",
	2: "PUSHEDMPLSLABELSTACK_ROUTER_ALERT",
	3: "PUSHEDMPLSLABELSTACK_IPV6_EXPLICIT_NULL",
	4: "PUSHEDMPLSLABELSTACK_IMPLICIT_NULL",
	8: "PUSHEDMPLSLABELSTACK_ENTROPY_LABEL_INDICATOR",
	9: "PUSHEDMPLSLABELSTACK_NO_LABEL",
}
var Afts_NextHop_PushedMplsLabelStack_value = map[string]int32{
	"PUSHEDMPLSLABELSTACK_UNSET":                   0,
	"PUSHEDMPLSLABELSTACK_IPV4_EXPLICIT_NULL":      1,
	"PUSHEDMPLSLABELSTACK_ROUTER_ALERT":            2,
	"PUSHEDMPLSLABELSTACK_IPV6_EXPLICIT_NULL":      3,
	"PUSHEDMPLSLABELSTACK_IMPLICIT_NULL":           4,
	"PUSHEDMPLSLABELSTACK_ENTROPY_LABEL_INDICATOR": 8,
	"PUSHEDMPLSLABELSTACK_NO_LABEL":                9,
}

func (x Afts_NextHop_PushedMplsLabelStack) String() string {
	return proto.EnumName(Afts_NextHop_PushedMplsLabelStack_name, int32(x))
}
func (Afts_NextHop_PushedMplsLabelStack) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 8, 0}
}

type Afts_PolicyForwardingEntry_MplsLabel int32

const (
	Afts_PolicyForwardingEntry_MPLSLABEL_UNSET                   Afts_PolicyForwardingEntry_MplsLabel = 0
	Afts_PolicyForwardingEntry_MPLSLABEL_IPV4_EXPLICIT_NULL      Afts_PolicyForwardingEntry_MplsLabel = 1
	Afts_PolicyForwardingEntry_MPLSLABEL_ROUTER_ALERT            Afts_PolicyForwardingEntry_MplsLabel = 2
	Afts_PolicyForwardingEntry_MPLSLABEL_IPV6_EXPLICIT_NULL      Afts_PolicyForwardingEntry_MplsLabel = 3
	Afts_PolicyForwardingEntry_MPLSLABEL_IMPLICIT_NULL           Afts_PolicyForwardingEntry_MplsLabel = 4
	Afts_PolicyForwardingEntry_MPLSLABEL_ENTROPY_LABEL_INDICATOR Afts_PolicyForwardingEntry_MplsLabel = 8
	Afts_PolicyForwardingEntry_MPLSLABEL_NO_LABEL                Afts_PolicyForwardingEntry_MplsLabel = 9
)

var Afts_PolicyForwardingEntry_MplsLabel_name = map[int32]string{
	0: "MPLSLABEL_UNSET",
	1: "MPLSLABEL_IPV4_EXPLICIT_NULL",
	2: "MPLSLABEL_ROUTER_ALERT",
	3: "MPLSLABEL_IPV6_EXPLICIT_NULL",
	4: "MPLSLABEL_IMPLICIT_NULL",
	8: "MPLSLABEL_ENTROPY_LABEL_INDICATOR",
	9: "MPLSLABEL_NO_LABEL",
}
var Afts_PolicyForwardingEntry_MplsLabel_value = map[string]int32{
	"MPLSLABEL_UNSET":                   0,
	"MPLSLABEL_IPV4_EXPLICIT_NULL":      1,
	"MPLSLABEL_ROUTER_ALERT":            2,
	"MPLSLABEL_IPV6_EXPLICIT_NULL":      3,
	"MPLSLABEL_IMPLICIT_NULL":           4,
	"MPLSLABEL_ENTROPY_LABEL_INDICATOR": 8,
	"MPLSLABEL_NO_LABEL":                9,
}

func (x Afts_PolicyForwardingEntry_MplsLabel) String() string {
	return proto.EnumName(Afts_PolicyForwardingEntry_MplsLabel_name, int32(x))
}
func (Afts_PolicyForwardingEntry_MplsLabel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 12, 0}
}

type Device struct {
	Afts *Afts `protobuf:"bytes,35982132,opt,name=afts" json:"afts,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Device) GetAfts() *Afts {
	if m != nil {
		return m.Afts
	}
	return nil
}

type Afts struct {
	Ipv4Entry             []*Afts_Ipv4EntryKey             `protobuf:"bytes,410397655,rep,name=ipv4_entry,json=ipv4Entry" json:"ipv4_entry,omitempty"`
	Ipv6Entry             []*Afts_Ipv6EntryKey             `protobuf:"bytes,403891971,rep,name=ipv6_entry,json=ipv6Entry" json:"ipv6_entry,omitempty"`
	LabelEntry            []*Afts_LabelEntryKey            `protobuf:"bytes,153428187,rep,name=label_entry,json=labelEntry" json:"label_entry,omitempty"`
	MacEntry              []*Afts_MacEntryKey              `protobuf:"bytes,162139969,rep,name=mac_entry,json=macEntry" json:"mac_entry,omitempty"`
	NextHop               []*Afts_NextHopKey               `protobuf:"bytes,132654769,rep,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	NextHopGroup          []*Afts_NextHopGroupKey          `protobuf:"bytes,362999033,rep,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	PolicyForwardingEntry []*Afts_PolicyForwardingEntryKey `protobuf:"bytes,269536139,rep,name=policy_forwarding_entry,json=policyForwardingEntry" json:"policy_forwarding_entry,omitempty"`
}

func (m *Afts) Reset()                    { *m = Afts{} }
func (m *Afts) String() string            { return proto.CompactTextString(m) }
func (*Afts) ProtoMessage()               {}
func (*Afts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Afts) GetIpv4Entry() []*Afts_Ipv4EntryKey {
	if m != nil {
		return m.Ipv4Entry
	}
	return nil
}

func (m *Afts) GetIpv6Entry() []*Afts_Ipv6EntryKey {
	if m != nil {
		return m.Ipv6Entry
	}
	return nil
}

func (m *Afts) GetLabelEntry() []*Afts_LabelEntryKey {
	if m != nil {
		return m.LabelEntry
	}
	return nil
}

func (m *Afts) GetMacEntry() []*Afts_MacEntryKey {
	if m != nil {
		return m.MacEntry
	}
	return nil
}

func (m *Afts) GetNextHop() []*Afts_NextHopKey {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (m *Afts) GetNextHopGroup() []*Afts_NextHopGroupKey {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

func (m *Afts) GetPolicyForwardingEntry() []*Afts_PolicyForwardingEntryKey {
	if m != nil {
		return m.PolicyForwardingEntry
	}
	return nil
}

type Afts_Ipv4Entry struct {
	DecapsulateHeader gribi_aft_enums.OpenconfigAftEncapsulationHeaderType `protobuf:"varint,383809427,opt,name=decapsulate_header,json=decapsulateHeader,enum=gribi_aft.enums.OpenconfigAftEncapsulationHeaderType" json:"decapsulate_header,omitempty"`
	NextHopGroup      *ywrapper.UintValue                                  `protobuf:"bytes,497198611,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	OctetsForwarded   *ywrapper.UintValue                                  `protobuf:"bytes,299759987,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	PacketsForwarded  *ywrapper.UintValue                                  `protobuf:"bytes,298329756,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
}

func (m *Afts_Ipv4Entry) Reset()                    { *m = Afts_Ipv4Entry{} }
func (m *Afts_Ipv4Entry) String() string            { return proto.CompactTextString(m) }
func (*Afts_Ipv4Entry) ProtoMessage()               {}
func (*Afts_Ipv4Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Afts_Ipv4Entry) GetDecapsulateHeader() gribi_aft_enums.OpenconfigAftEncapsulationHeaderType {
	if m != nil {
		return m.DecapsulateHeader
	}
	return gribi_aft_enums.OpenconfigAftEncapsulationHeaderType_OPENCONFIGAFTENCAPSULATIONHEADERTYPE_UNSET
}

func (m *Afts_Ipv4Entry) GetNextHopGroup() *ywrapper.UintValue {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

func (m *Afts_Ipv4Entry) GetOctetsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.OctetsForwarded
	}
	return nil
}

func (m *Afts_Ipv4Entry) GetPacketsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.PacketsForwarded
	}
	return nil
}

type Afts_Ipv4EntryKey struct {
	Prefix    string          `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	Ipv4Entry *Afts_Ipv4Entry `protobuf:"bytes,2,opt,name=ipv4_entry,json=ipv4Entry" json:"ipv4_entry,omitempty"`
}

func (m *Afts_Ipv4EntryKey) Reset()                    { *m = Afts_Ipv4EntryKey{} }
func (m *Afts_Ipv4EntryKey) String() string            { return proto.CompactTextString(m) }
func (*Afts_Ipv4EntryKey) ProtoMessage()               {}
func (*Afts_Ipv4EntryKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Afts_Ipv4EntryKey) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Afts_Ipv4EntryKey) GetIpv4Entry() *Afts_Ipv4Entry {
	if m != nil {
		return m.Ipv4Entry
	}
	return nil
}

type Afts_Ipv6Entry struct {
	DecapsulateHeader gribi_aft_enums.OpenconfigAftEncapsulationHeaderType `protobuf:"varint,328774623,opt,name=decapsulate_header,json=decapsulateHeader,enum=gribi_aft.enums.OpenconfigAftEncapsulationHeaderType" json:"decapsulate_header,omitempty"`
	NextHopGroup      *ywrapper.UintValue                                  `protobuf:"bytes,442121607,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	OctetsForwarded   *ywrapper.UintValue                                  `protobuf:"bytes,219660135,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	PacketsForwarded  *ywrapper.UintValue                                  `protobuf:"bytes,204384952,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
}

func (m *Afts_Ipv6Entry) Reset()                    { *m = Afts_Ipv6Entry{} }
func (m *Afts_Ipv6Entry) String() string            { return proto.CompactTextString(m) }
func (*Afts_Ipv6Entry) ProtoMessage()               {}
func (*Afts_Ipv6Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 2} }

func (m *Afts_Ipv6Entry) GetDecapsulateHeader() gribi_aft_enums.OpenconfigAftEncapsulationHeaderType {
	if m != nil {
		return m.DecapsulateHeader
	}
	return gribi_aft_enums.OpenconfigAftEncapsulationHeaderType_OPENCONFIGAFTENCAPSULATIONHEADERTYPE_UNSET
}

func (m *Afts_Ipv6Entry) GetNextHopGroup() *ywrapper.UintValue {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

func (m *Afts_Ipv6Entry) GetOctetsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.OctetsForwarded
	}
	return nil
}

func (m *Afts_Ipv6Entry) GetPacketsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.PacketsForwarded
	}
	return nil
}

type Afts_Ipv6EntryKey struct {
	Prefix    string          `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	Ipv6Entry *Afts_Ipv6Entry `protobuf:"bytes,2,opt,name=ipv6_entry,json=ipv6Entry" json:"ipv6_entry,omitempty"`
}

func (m *Afts_Ipv6EntryKey) Reset()                    { *m = Afts_Ipv6EntryKey{} }
func (m *Afts_Ipv6EntryKey) String() string            { return proto.CompactTextString(m) }
func (*Afts_Ipv6EntryKey) ProtoMessage()               {}
func (*Afts_Ipv6EntryKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 3} }

func (m *Afts_Ipv6EntryKey) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Afts_Ipv6EntryKey) GetIpv6Entry() *Afts_Ipv6Entry {
	if m != nil {
		return m.Ipv6Entry
	}
	return nil
}

type Afts_LabelEntry struct {
	NextHopGroup         *ywrapper.UintValue                          `protobuf:"bytes,307713279,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	OctetsForwarded      *ywrapper.UintValue                          `protobuf:"bytes,508405375,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	PacketsForwarded     *ywrapper.UintValue                          `protobuf:"bytes,399797536,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
	PoppedMplsLabelStack []*Afts_LabelEntry_PoppedMplsLabelStackUnion `protobuf:"bytes,62799927,rep,name=popped_mpls_label_stack,json=poppedMplsLabelStack" json:"popped_mpls_label_stack,omitempty"`
}

func (m *Afts_LabelEntry) Reset()                    { *m = Afts_LabelEntry{} }
func (m *Afts_LabelEntry) String() string            { return proto.CompactTextString(m) }
func (*Afts_LabelEntry) ProtoMessage()               {}
func (*Afts_LabelEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 4} }

func (m *Afts_LabelEntry) GetNextHopGroup() *ywrapper.UintValue {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

func (m *Afts_LabelEntry) GetOctetsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.OctetsForwarded
	}
	return nil
}

func (m *Afts_LabelEntry) GetPacketsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.PacketsForwarded
	}
	return nil
}

func (m *Afts_LabelEntry) GetPoppedMplsLabelStack() []*Afts_LabelEntry_PoppedMplsLabelStackUnion {
	if m != nil {
		return m.PoppedMplsLabelStack
	}
	return nil
}

type Afts_LabelEntry_PoppedMplsLabelStackUnion struct {
	PoppedMplsLabelStackPoppedmplslabelstack Afts_LabelEntry_PoppedMplsLabelStack `protobuf:"varint,516317880,opt,name=popped_mpls_label_stack_poppedmplslabelstack,json=poppedMplsLabelStackPoppedmplslabelstack,enum=gribi_aft.Afts_LabelEntry_PoppedMplsLabelStack" json:"popped_mpls_label_stack_poppedmplslabelstack,omitempty"`
	PoppedMplsLabelStackUint64               uint64                               `protobuf:"varint,510588408,opt,name=popped_mpls_label_stack_uint64,json=poppedMplsLabelStackUint64" json:"popped_mpls_label_stack_uint64,omitempty"`
}

func (m *Afts_LabelEntry_PoppedMplsLabelStackUnion) Reset() {
	*m = Afts_LabelEntry_PoppedMplsLabelStackUnion{}
}
func (m *Afts_LabelEntry_PoppedMplsLabelStackUnion) String() string { return proto.CompactTextString(m) }
func (*Afts_LabelEntry_PoppedMplsLabelStackUnion) ProtoMessage()    {}
func (*Afts_LabelEntry_PoppedMplsLabelStackUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 4, 0}
}

func (m *Afts_LabelEntry_PoppedMplsLabelStackUnion) GetPoppedMplsLabelStackPoppedmplslabelstack() Afts_LabelEntry_PoppedMplsLabelStack {
	if m != nil {
		return m.PoppedMplsLabelStackPoppedmplslabelstack
	}
	return Afts_LabelEntry_POPPEDMPLSLABELSTACK_UNSET
}

func (m *Afts_LabelEntry_PoppedMplsLabelStackUnion) GetPoppedMplsLabelStackUint64() uint64 {
	if m != nil {
		return m.PoppedMplsLabelStackUint64
	}
	return 0
}

type Afts_LabelEntryKey struct {
	// Types that are valid to be assigned to Label:
	//	*Afts_LabelEntryKey_LabelLabel
	//	*Afts_LabelEntryKey_LabelUint64
	Label      isAfts_LabelEntryKey_Label `protobuf_oneof:"label"`
	LabelEntry *Afts_LabelEntry           `protobuf:"bytes,2,opt,name=label_entry,json=labelEntry" json:"label_entry,omitempty"`
}

func (m *Afts_LabelEntryKey) Reset()                    { *m = Afts_LabelEntryKey{} }
func (m *Afts_LabelEntryKey) String() string            { return proto.CompactTextString(m) }
func (*Afts_LabelEntryKey) ProtoMessage()               {}
func (*Afts_LabelEntryKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 5} }

type isAfts_LabelEntryKey_Label interface {
	isAfts_LabelEntryKey_Label()
}

type Afts_LabelEntryKey_LabelLabel struct {
	LabelLabel Afts_LabelEntryKey_Label `protobuf:"varint,39380472,opt,name=label_label,json=labelLabel,enum=gribi_aft.Afts_LabelEntryKey_Label,oneof"`
}
type Afts_LabelEntryKey_LabelUint64 struct {
	LabelUint64 uint64 `protobuf:"varint,369699564,opt,name=label_uint64,json=labelUint64,oneof"`
}

func (*Afts_LabelEntryKey_LabelLabel) isAfts_LabelEntryKey_Label()  {}
func (*Afts_LabelEntryKey_LabelUint64) isAfts_LabelEntryKey_Label() {}

func (m *Afts_LabelEntryKey) GetLabel() isAfts_LabelEntryKey_Label {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *Afts_LabelEntryKey) GetLabelLabel() Afts_LabelEntryKey_Label {
	if x, ok := m.GetLabel().(*Afts_LabelEntryKey_LabelLabel); ok {
		return x.LabelLabel
	}
	return Afts_LabelEntryKey_LABEL_UNSET
}

func (m *Afts_LabelEntryKey) GetLabelUint64() uint64 {
	if x, ok := m.GetLabel().(*Afts_LabelEntryKey_LabelUint64); ok {
		return x.LabelUint64
	}
	return 0
}

func (m *Afts_LabelEntryKey) GetLabelEntry() *Afts_LabelEntry {
	if m != nil {
		return m.LabelEntry
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Afts_LabelEntryKey) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Afts_LabelEntryKey_OneofMarshaler, _Afts_LabelEntryKey_OneofUnmarshaler, _Afts_LabelEntryKey_OneofSizer, []interface{}{
		(*Afts_LabelEntryKey_LabelLabel)(nil),
		(*Afts_LabelEntryKey_LabelUint64)(nil),
	}
}

func _Afts_LabelEntryKey_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Afts_LabelEntryKey)
	// label
	switch x := m.Label.(type) {
	case *Afts_LabelEntryKey_LabelLabel:
		b.EncodeVarint(39380472<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.LabelLabel))
	case *Afts_LabelEntryKey_LabelUint64:
		b.EncodeVarint(369699564<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.LabelUint64))
	case nil:
	default:
		return fmt.Errorf("Afts_LabelEntryKey.Label has unexpected type %T", x)
	}
	return nil
}

func _Afts_LabelEntryKey_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Afts_LabelEntryKey)
	switch tag {
	case 39380472: // label.label_label
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Label = &Afts_LabelEntryKey_LabelLabel{Afts_LabelEntryKey_Label(x)}
		return true, err
	case 369699564: // label.label_uint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Label = &Afts_LabelEntryKey_LabelUint64{x}
		return true, err
	default:
		return false, nil
	}
}

func _Afts_LabelEntryKey_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Afts_LabelEntryKey)
	// label
	switch x := m.Label.(type) {
	case *Afts_LabelEntryKey_LabelLabel:
		n += proto.SizeVarint(39380472<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.LabelLabel))
	case *Afts_LabelEntryKey_LabelUint64:
		n += proto.SizeVarint(369699564<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.LabelUint64))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Afts_MacEntry struct {
	NextHopGroup     *ywrapper.UintValue `protobuf:"bytes,320343041,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	OctetsForwarded  *ywrapper.UintValue `protobuf:"bytes,113345869,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	PacketsForwarded *ywrapper.UintValue `protobuf:"bytes,348841578,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
}

func (m *Afts_MacEntry) Reset()                    { *m = Afts_MacEntry{} }
func (m *Afts_MacEntry) String() string            { return proto.CompactTextString(m) }
func (*Afts_MacEntry) ProtoMessage()               {}
func (*Afts_MacEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 6} }

func (m *Afts_MacEntry) GetNextHopGroup() *ywrapper.UintValue {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

func (m *Afts_MacEntry) GetOctetsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.OctetsForwarded
	}
	return nil
}

func (m *Afts_MacEntry) GetPacketsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.PacketsForwarded
	}
	return nil
}

type Afts_MacEntryKey struct {
	MacAddress string         `protobuf:"bytes,1,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	MacEntry   *Afts_MacEntry `protobuf:"bytes,2,opt,name=mac_entry,json=macEntry" json:"mac_entry,omitempty"`
}

func (m *Afts_MacEntryKey) Reset()                    { *m = Afts_MacEntryKey{} }
func (m *Afts_MacEntryKey) String() string            { return proto.CompactTextString(m) }
func (*Afts_MacEntryKey) ProtoMessage()               {}
func (*Afts_MacEntryKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 7} }

func (m *Afts_MacEntryKey) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *Afts_MacEntryKey) GetMacEntry() *Afts_MacEntry {
	if m != nil {
		return m.MacEntry
	}
	return nil
}

type Afts_NextHop struct {
	EncapsulateHeader    gribi_aft_enums.OpenconfigAftEncapsulationHeaderType     `protobuf:"varint,69966061,opt,name=encapsulate_header,json=encapsulateHeader,enum=gribi_aft.enums.OpenconfigAftEncapsulationHeaderType" json:"encapsulate_header,omitempty"`
	InterfaceRef         *Afts_NextHop_InterfaceRef                               `protobuf:"bytes,293682821,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	IpAddress            *ywrapper.StringValue                                    `protobuf:"bytes,242108262,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	MacAddress           *ywrapper.StringValue                                    `protobuf:"bytes,404609192,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	OriginProtocol       gribi_aft_enums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE `protobuf:"varint,186436757,opt,name=origin_protocol,json=originProtocol,enum=gribi_aft.enums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE" json:"origin_protocol,omitempty"`
	PushedMplsLabelStack []*Afts_NextHop_PushedMplsLabelStackUnion                `protobuf:"bytes,489592660,rep,name=pushed_mpls_label_stack,json=pushedMplsLabelStack" json:"pushed_mpls_label_stack,omitempty"`
}

func (m *Afts_NextHop) Reset()                    { *m = Afts_NextHop{} }
func (m *Afts_NextHop) String() string            { return proto.CompactTextString(m) }
func (*Afts_NextHop) ProtoMessage()               {}
func (*Afts_NextHop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 8} }

func (m *Afts_NextHop) GetEncapsulateHeader() gribi_aft_enums.OpenconfigAftEncapsulationHeaderType {
	if m != nil {
		return m.EncapsulateHeader
	}
	return gribi_aft_enums.OpenconfigAftEncapsulationHeaderType_OPENCONFIGAFTENCAPSULATIONHEADERTYPE_UNSET
}

func (m *Afts_NextHop) GetInterfaceRef() *Afts_NextHop_InterfaceRef {
	if m != nil {
		return m.InterfaceRef
	}
	return nil
}

func (m *Afts_NextHop) GetIpAddress() *ywrapper.StringValue {
	if m != nil {
		return m.IpAddress
	}
	return nil
}

func (m *Afts_NextHop) GetMacAddress() *ywrapper.StringValue {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

func (m *Afts_NextHop) GetOriginProtocol() gribi_aft_enums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE {
	if m != nil {
		return m.OriginProtocol
	}
	return gribi_aft_enums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE_OPENCONFIGPOLICYTYPESINSTALLPROTOCOLTYPE_UNSET
}

func (m *Afts_NextHop) GetPushedMplsLabelStack() []*Afts_NextHop_PushedMplsLabelStackUnion {
	if m != nil {
		return m.PushedMplsLabelStack
	}
	return nil
}

type Afts_NextHop_InterfaceRef struct {
	Interface    *ywrapper.StringValue `protobuf:"bytes,269626950,opt,name=interface" json:"interface,omitempty"`
	Subinterface *ywrapper.UintValue   `protobuf:"bytes,387796466,opt,name=subinterface" json:"subinterface,omitempty"`
}

func (m *Afts_NextHop_InterfaceRef) Reset()                    { *m = Afts_NextHop_InterfaceRef{} }
func (m *Afts_NextHop_InterfaceRef) String() string            { return proto.CompactTextString(m) }
func (*Afts_NextHop_InterfaceRef) ProtoMessage()               {}
func (*Afts_NextHop_InterfaceRef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 8, 0} }

func (m *Afts_NextHop_InterfaceRef) GetInterface() *ywrapper.StringValue {
	if m != nil {
		return m.Interface
	}
	return nil
}

func (m *Afts_NextHop_InterfaceRef) GetSubinterface() *ywrapper.UintValue {
	if m != nil {
		return m.Subinterface
	}
	return nil
}

type Afts_NextHop_PushedMplsLabelStackUnion struct {
	PushedMplsLabelStackPushedmplslabelstack Afts_NextHop_PushedMplsLabelStack `protobuf:"varint,63633490,opt,name=pushed_mpls_label_stack_pushedmplslabelstack,json=pushedMplsLabelStackPushedmplslabelstack,enum=gribi_aft.Afts_NextHop_PushedMplsLabelStack" json:"pushed_mpls_label_stack_pushedmplslabelstack,omitempty"`
	PushedMplsLabelStackUint64               uint64                            `protobuf:"varint,47493573,opt,name=pushed_mpls_label_stack_uint64,json=pushedMplsLabelStackUint64" json:"pushed_mpls_label_stack_uint64,omitempty"`
}

func (m *Afts_NextHop_PushedMplsLabelStackUnion) Reset() {
	*m = Afts_NextHop_PushedMplsLabelStackUnion{}
}
func (m *Afts_NextHop_PushedMplsLabelStackUnion) String() string { return proto.CompactTextString(m) }
func (*Afts_NextHop_PushedMplsLabelStackUnion) ProtoMessage()    {}
func (*Afts_NextHop_PushedMplsLabelStackUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 8, 1}
}

func (m *Afts_NextHop_PushedMplsLabelStackUnion) GetPushedMplsLabelStackPushedmplslabelstack() Afts_NextHop_PushedMplsLabelStack {
	if m != nil {
		return m.PushedMplsLabelStackPushedmplslabelstack
	}
	return Afts_NextHop_PUSHEDMPLSLABELSTACK_UNSET
}

func (m *Afts_NextHop_PushedMplsLabelStackUnion) GetPushedMplsLabelStackUint64() uint64 {
	if m != nil {
		return m.PushedMplsLabelStackUint64
	}
	return 0
}

type Afts_NextHopGroup struct {
	BackupNextHopGroup *ywrapper.UintValue             `protobuf:"bytes,366506898,opt,name=backup_next_hop_group,json=backupNextHopGroup" json:"backup_next_hop_group,omitempty"`
	Color              *ywrapper.UintValue             `protobuf:"bytes,242427279,opt,name=color" json:"color,omitempty"`
	NextHop            []*Afts_NextHopGroup_NextHopKey `protobuf:"bytes,211071474,rep,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
}

func (m *Afts_NextHopGroup) Reset()                    { *m = Afts_NextHopGroup{} }
func (m *Afts_NextHopGroup) String() string            { return proto.CompactTextString(m) }
func (*Afts_NextHopGroup) ProtoMessage()               {}
func (*Afts_NextHopGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 9} }

func (m *Afts_NextHopGroup) GetBackupNextHopGroup() *ywrapper.UintValue {
	if m != nil {
		return m.BackupNextHopGroup
	}
	return nil
}

func (m *Afts_NextHopGroup) GetColor() *ywrapper.UintValue {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *Afts_NextHopGroup) GetNextHop() []*Afts_NextHopGroup_NextHopKey {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type Afts_NextHopGroup_NextHop struct {
	Weight *ywrapper.UintValue `protobuf:"bytes,202140175,opt,name=weight" json:"weight,omitempty"`
}

func (m *Afts_NextHopGroup_NextHop) Reset()                    { *m = Afts_NextHopGroup_NextHop{} }
func (m *Afts_NextHopGroup_NextHop) String() string            { return proto.CompactTextString(m) }
func (*Afts_NextHopGroup_NextHop) ProtoMessage()               {}
func (*Afts_NextHopGroup_NextHop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 9, 0} }

func (m *Afts_NextHopGroup_NextHop) GetWeight() *ywrapper.UintValue {
	if m != nil {
		return m.Weight
	}
	return nil
}

type Afts_NextHopGroup_NextHopKey struct {
	Index   uint64                     `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	NextHop *Afts_NextHopGroup_NextHop `protobuf:"bytes,2,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
}

func (m *Afts_NextHopGroup_NextHopKey) Reset()         { *m = Afts_NextHopGroup_NextHopKey{} }
func (m *Afts_NextHopGroup_NextHopKey) String() string { return proto.CompactTextString(m) }
func (*Afts_NextHopGroup_NextHopKey) ProtoMessage()    {}
func (*Afts_NextHopGroup_NextHopKey) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 9, 1}
}

func (m *Afts_NextHopGroup_NextHopKey) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Afts_NextHopGroup_NextHopKey) GetNextHop() *Afts_NextHopGroup_NextHop {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type Afts_NextHopGroupKey struct {
	Id           uint64             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NextHopGroup *Afts_NextHopGroup `protobuf:"bytes,2,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
}

func (m *Afts_NextHopGroupKey) Reset()                    { *m = Afts_NextHopGroupKey{} }
func (m *Afts_NextHopGroupKey) String() string            { return proto.CompactTextString(m) }
func (*Afts_NextHopGroupKey) ProtoMessage()               {}
func (*Afts_NextHopGroupKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 10} }

func (m *Afts_NextHopGroupKey) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Afts_NextHopGroupKey) GetNextHopGroup() *Afts_NextHopGroup {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

type Afts_NextHopKey struct {
	Index   uint64        `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	NextHop *Afts_NextHop `protobuf:"bytes,2,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
}

func (m *Afts_NextHopKey) Reset()                    { *m = Afts_NextHopKey{} }
func (m *Afts_NextHopKey) String() string            { return proto.CompactTextString(m) }
func (*Afts_NextHopKey) ProtoMessage()               {}
func (*Afts_NextHopKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 11} }

func (m *Afts_NextHopKey) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Afts_NextHopKey) GetNextHop() *Afts_NextHop {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type Afts_PolicyForwardingEntry struct {
	IpDscp   *ywrapper.UintValue   `protobuf:"bytes,35938351,opt,name=ip_dscp,json=ipDscp" json:"ip_dscp,omitempty"`
	IpPrefix *ywrapper.StringValue `protobuf:"bytes,455458193,opt,name=ip_prefix,json=ipPrefix" json:"ip_prefix,omitempty"`
	// Types that are valid to be assigned to IpProtocol:
	//	*Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol
	//	*Afts_PolicyForwardingEntry_IpProtocolUint64
	IpProtocol isAfts_PolicyForwardingEntry_IpProtocol `protobuf_oneof:"ip_protocol"`
	L4DstPort  *ywrapper.UintValue                     `protobuf:"bytes,529012939,opt,name=l4_dst_port,json=l4DstPort" json:"l4_dst_port,omitempty"`
	L4SrcPort  *ywrapper.UintValue                     `protobuf:"bytes,372676914,opt,name=l4_src_port,json=l4SrcPort" json:"l4_src_port,omitempty"`
	MacAddress *ywrapper.StringValue                   `protobuf:"bytes,162237475,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	// Types that are valid to be assigned to MplsLabel:
	//	*Afts_PolicyForwardingEntry_MplsLabelMplslabel
	//	*Afts_PolicyForwardingEntry_MplsLabelUint64
	MplsLabel        isAfts_PolicyForwardingEntry_MplsLabel `protobuf_oneof:"mpls_label"`
	MplsTc           *ywrapper.UintValue                    `protobuf:"bytes,74032635,opt,name=mpls_tc,json=mplsTc" json:"mpls_tc,omitempty"`
	NextHopGroup     *ywrapper.UintValue                    `protobuf:"bytes,188303215,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	OctetsForwarded  *ywrapper.UintValue                    `protobuf:"bytes,175461231,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	PacketsForwarded *ywrapper.UintValue                    `protobuf:"bytes,367761904,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
}

func (m *Afts_PolicyForwardingEntry) Reset()                    { *m = Afts_PolicyForwardingEntry{} }
func (m *Afts_PolicyForwardingEntry) String() string            { return proto.CompactTextString(m) }
func (*Afts_PolicyForwardingEntry) ProtoMessage()               {}
func (*Afts_PolicyForwardingEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 12} }

type isAfts_PolicyForwardingEntry_IpProtocol interface {
	isAfts_PolicyForwardingEntry_IpProtocol()
}
type isAfts_PolicyForwardingEntry_MplsLabel interface {
	isAfts_PolicyForwardingEntry_MplsLabel()
}

type Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol struct {
	IpProtocolOpenconfigpacketmatchtypesipprotocol gribi_aft_enums.OpenconfigPacketMatchTypesIPPROTOCOL `protobuf:"varint,332091131,opt,name=ip_protocol_openconfigpacketmatchtypesipprotocol,json=ipProtocolOpenconfigpacketmatchtypesipprotocol,enum=gribi_aft.enums.OpenconfigPacketMatchTypesIPPROTOCOL,oneof"`
}
type Afts_PolicyForwardingEntry_IpProtocolUint64 struct {
	IpProtocolUint64 uint64 `protobuf:"varint,451771266,opt,name=ip_protocol_uint64,json=ipProtocolUint64,oneof"`
}
type Afts_PolicyForwardingEntry_MplsLabelMplslabel struct {
	MplsLabelMplslabel Afts_PolicyForwardingEntry_MplsLabel `protobuf:"varint,311921089,opt,name=mpls_label_mplslabel,json=mplsLabelMplslabel,enum=gribi_aft.Afts_PolicyForwardingEntry_MplsLabel,oneof"`
}
type Afts_PolicyForwardingEntry_MplsLabelUint64 struct {
	MplsLabelUint64 uint64 `protobuf:"varint,399811487,opt,name=mpls_label_uint64,json=mplsLabelUint64,oneof"`
}

func (*Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol) isAfts_PolicyForwardingEntry_IpProtocol() {
}
func (*Afts_PolicyForwardingEntry_IpProtocolUint64) isAfts_PolicyForwardingEntry_IpProtocol()  {}
func (*Afts_PolicyForwardingEntry_MplsLabelMplslabel) isAfts_PolicyForwardingEntry_MplsLabel() {}
func (*Afts_PolicyForwardingEntry_MplsLabelUint64) isAfts_PolicyForwardingEntry_MplsLabel()    {}

func (m *Afts_PolicyForwardingEntry) GetIpProtocol() isAfts_PolicyForwardingEntry_IpProtocol {
	if m != nil {
		return m.IpProtocol
	}
	return nil
}
func (m *Afts_PolicyForwardingEntry) GetMplsLabel() isAfts_PolicyForwardingEntry_MplsLabel {
	if m != nil {
		return m.MplsLabel
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetIpDscp() *ywrapper.UintValue {
	if m != nil {
		return m.IpDscp
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetIpPrefix() *ywrapper.StringValue {
	if m != nil {
		return m.IpPrefix
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetIpProtocolOpenconfigpacketmatchtypesipprotocol() gribi_aft_enums.OpenconfigPacketMatchTypesIPPROTOCOL {
	if x, ok := m.GetIpProtocol().(*Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol); ok {
		return x.IpProtocolOpenconfigpacketmatchtypesipprotocol
	}
	return gribi_aft_enums.OpenconfigPacketMatchTypesIPPROTOCOL_OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_UNSET
}

func (m *Afts_PolicyForwardingEntry) GetIpProtocolUint64() uint64 {
	if x, ok := m.GetIpProtocol().(*Afts_PolicyForwardingEntry_IpProtocolUint64); ok {
		return x.IpProtocolUint64
	}
	return 0
}

func (m *Afts_PolicyForwardingEntry) GetL4DstPort() *ywrapper.UintValue {
	if m != nil {
		return m.L4DstPort
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetL4SrcPort() *ywrapper.UintValue {
	if m != nil {
		return m.L4SrcPort
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetMacAddress() *ywrapper.StringValue {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetMplsLabelMplslabel() Afts_PolicyForwardingEntry_MplsLabel {
	if x, ok := m.GetMplsLabel().(*Afts_PolicyForwardingEntry_MplsLabelMplslabel); ok {
		return x.MplsLabelMplslabel
	}
	return Afts_PolicyForwardingEntry_MPLSLABEL_UNSET
}

func (m *Afts_PolicyForwardingEntry) GetMplsLabelUint64() uint64 {
	if x, ok := m.GetMplsLabel().(*Afts_PolicyForwardingEntry_MplsLabelUint64); ok {
		return x.MplsLabelUint64
	}
	return 0
}

func (m *Afts_PolicyForwardingEntry) GetMplsTc() *ywrapper.UintValue {
	if m != nil {
		return m.MplsTc
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetNextHopGroup() *ywrapper.UintValue {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetOctetsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.OctetsForwarded
	}
	return nil
}

func (m *Afts_PolicyForwardingEntry) GetPacketsForwarded() *ywrapper.UintValue {
	if m != nil {
		return m.PacketsForwarded
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Afts_PolicyForwardingEntry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Afts_PolicyForwardingEntry_OneofMarshaler, _Afts_PolicyForwardingEntry_OneofUnmarshaler, _Afts_PolicyForwardingEntry_OneofSizer, []interface{}{
		(*Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol)(nil),
		(*Afts_PolicyForwardingEntry_IpProtocolUint64)(nil),
		(*Afts_PolicyForwardingEntry_MplsLabelMplslabel)(nil),
		(*Afts_PolicyForwardingEntry_MplsLabelUint64)(nil),
	}
}

func _Afts_PolicyForwardingEntry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Afts_PolicyForwardingEntry)
	// ip_protocol
	switch x := m.IpProtocol.(type) {
	case *Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol:
		b.EncodeVarint(332091131<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IpProtocolOpenconfigpacketmatchtypesipprotocol))
	case *Afts_PolicyForwardingEntry_IpProtocolUint64:
		b.EncodeVarint(451771266<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IpProtocolUint64))
	case nil:
	default:
		return fmt.Errorf("Afts_PolicyForwardingEntry.IpProtocol has unexpected type %T", x)
	}
	// mpls_label
	switch x := m.MplsLabel.(type) {
	case *Afts_PolicyForwardingEntry_MplsLabelMplslabel:
		b.EncodeVarint(311921089<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MplsLabelMplslabel))
	case *Afts_PolicyForwardingEntry_MplsLabelUint64:
		b.EncodeVarint(399811487<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MplsLabelUint64))
	case nil:
	default:
		return fmt.Errorf("Afts_PolicyForwardingEntry.MplsLabel has unexpected type %T", x)
	}
	return nil
}

func _Afts_PolicyForwardingEntry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Afts_PolicyForwardingEntry)
	switch tag {
	case 332091131: // ip_protocol.ip_protocol_openconfigpacketmatchtypesipprotocol
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IpProtocol = &Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol{gribi_aft_enums.OpenconfigPacketMatchTypesIPPROTOCOL(x)}
		return true, err
	case 451771266: // ip_protocol.ip_protocol_uint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IpProtocol = &Afts_PolicyForwardingEntry_IpProtocolUint64{x}
		return true, err
	case 311921089: // mpls_label.mpls_label_mplslabel
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MplsLabel = &Afts_PolicyForwardingEntry_MplsLabelMplslabel{Afts_PolicyForwardingEntry_MplsLabel(x)}
		return true, err
	case 399811487: // mpls_label.mpls_label_uint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MplsLabel = &Afts_PolicyForwardingEntry_MplsLabelUint64{x}
		return true, err
	default:
		return false, nil
	}
}

func _Afts_PolicyForwardingEntry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Afts_PolicyForwardingEntry)
	// ip_protocol
	switch x := m.IpProtocol.(type) {
	case *Afts_PolicyForwardingEntry_IpProtocolOpenconfigpacketmatchtypesipprotocol:
		n += proto.SizeVarint(332091131<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.IpProtocolOpenconfigpacketmatchtypesipprotocol))
	case *Afts_PolicyForwardingEntry_IpProtocolUint64:
		n += proto.SizeVarint(451771266<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.IpProtocolUint64))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mpls_label
	switch x := m.MplsLabel.(type) {
	case *Afts_PolicyForwardingEntry_MplsLabelMplslabel:
		n += proto.SizeVarint(311921089<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.MplsLabelMplslabel))
	case *Afts_PolicyForwardingEntry_MplsLabelUint64:
		n += proto.SizeVarint(399811487<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.MplsLabelUint64))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Afts_PolicyForwardingEntryKey struct {
	Index                 uint64                      `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	PolicyForwardingEntry *Afts_PolicyForwardingEntry `protobuf:"bytes,2,opt,name=policy_forwarding_entry,json=policyForwardingEntry" json:"policy_forwarding_entry,omitempty"`
}

func (m *Afts_PolicyForwardingEntryKey) Reset()         { *m = Afts_PolicyForwardingEntryKey{} }
func (m *Afts_PolicyForwardingEntryKey) String() string { return proto.CompactTextString(m) }
func (*Afts_PolicyForwardingEntryKey) ProtoMessage()    {}
func (*Afts_PolicyForwardingEntryKey) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 13}
}

func (m *Afts_PolicyForwardingEntryKey) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Afts_PolicyForwardingEntryKey) GetPolicyForwardingEntry() *Afts_PolicyForwardingEntry {
	if m != nil {
		return m.PolicyForwardingEntry
	}
	return nil
}

func init() {
	proto.RegisterType((*Device)(nil), "gribi_aft.Device")
	proto.RegisterType((*Afts)(nil), "gribi_aft.Afts")
	proto.RegisterType((*Afts_Ipv4Entry)(nil), "gribi_aft.Afts.Ipv4Entry")
	proto.RegisterType((*Afts_Ipv4EntryKey)(nil), "gribi_aft.Afts.Ipv4EntryKey")
	proto.RegisterType((*Afts_Ipv6Entry)(nil), "gribi_aft.Afts.Ipv6Entry")
	proto.RegisterType((*Afts_Ipv6EntryKey)(nil), "gribi_aft.Afts.Ipv6EntryKey")
	proto.RegisterType((*Afts_LabelEntry)(nil), "gribi_aft.Afts.LabelEntry")
	proto.RegisterType((*Afts_LabelEntry_PoppedMplsLabelStackUnion)(nil), "gribi_aft.Afts.LabelEntry.PoppedMplsLabelStackUnion")
	proto.RegisterType((*Afts_LabelEntryKey)(nil), "gribi_aft.Afts.LabelEntryKey")
	proto.RegisterType((*Afts_MacEntry)(nil), "gribi_aft.Afts.MacEntry")
	proto.RegisterType((*Afts_MacEntryKey)(nil), "gribi_aft.Afts.MacEntryKey")
	proto.RegisterType((*Afts_NextHop)(nil), "gribi_aft.Afts.NextHop")
	proto.RegisterType((*Afts_NextHop_InterfaceRef)(nil), "gribi_aft.Afts.NextHop.InterfaceRef")
	proto.RegisterType((*Afts_NextHop_PushedMplsLabelStackUnion)(nil), "gribi_aft.Afts.NextHop.PushedMplsLabelStackUnion")
	proto.RegisterType((*Afts_NextHopGroup)(nil), "gribi_aft.Afts.NextHopGroup")
	proto.RegisterType((*Afts_NextHopGroup_NextHop)(nil), "gribi_aft.Afts.NextHopGroup.NextHop")
	proto.RegisterType((*Afts_NextHopGroup_NextHopKey)(nil), "gribi_aft.Afts.NextHopGroup.NextHopKey")
	proto.RegisterType((*Afts_NextHopGroupKey)(nil), "gribi_aft.Afts.NextHopGroupKey")
	proto.RegisterType((*Afts_NextHopKey)(nil), "gribi_aft.Afts.NextHopKey")
	proto.RegisterType((*Afts_PolicyForwardingEntry)(nil), "gribi_aft.Afts.PolicyForwardingEntry")
	proto.RegisterType((*Afts_PolicyForwardingEntryKey)(nil), "gribi_aft.Afts.PolicyForwardingEntryKey")
	proto.RegisterEnum("gribi_aft.Afts_LabelEntry_PoppedMplsLabelStack", Afts_LabelEntry_PoppedMplsLabelStack_name, Afts_LabelEntry_PoppedMplsLabelStack_value)
	proto.RegisterEnum("gribi_aft.Afts_LabelEntryKey_Label", Afts_LabelEntryKey_Label_name, Afts_LabelEntryKey_Label_value)
	proto.RegisterEnum("gribi_aft.Afts_NextHop_PushedMplsLabelStack", Afts_NextHop_PushedMplsLabelStack_name, Afts_NextHop_PushedMplsLabelStack_value)
	proto.RegisterEnum("gribi_aft.Afts_PolicyForwardingEntry_MplsLabel", Afts_PolicyForwardingEntry_MplsLabel_name, Afts_PolicyForwardingEntry_MplsLabel_value)
}

func init() {
	proto.RegisterFile("github.com/openconfig/gribi/proto/gribi_aft/gribi_aft.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 2602 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0x7d, 0x6c, 0xd4, 0xe6,
	0xfd, 0xc7, 0x69, 0x12, 0x72, 0x4f, 0x02, 0x09, 0x4f, 0x79, 0x31, 0x2e, 0x50, 0x08, 0xfd, 0xfd,
	0x08, 0x2b, 0x77, 0x09, 0x21, 0x1c, 0x94, 0x8a, 0x75, 0xcf, 0x91, 0x83, 0x64, 0x5c, 0x92, 0x93,
	0x73, 0x41, 0x20, 0xad, 0xf2, 0x1c, 0x9f, 0x2f, 0xb1, 0xb8, 0x9c, 0x2d, 0xdb, 0x07, 0xa4, 0xed,
	0x2a, 0xf0, 0xd6, 0x56, 0x82, 0x0a, 0xd6, 0xc2, 0x18, 0xd5, 0xfa, 0x82, 0xd6, 0x8e, 0x75, 0xaa,
	0x9a, 0x2e, 0xdd, 0xda, 0x32, 0x26, 0x55, 0xa0, 0xaa, 0xdb, 0x24, 0x60, 0xd2, 0x50, 0x19, 0x6b,
	0xb7, 0x75, 0x2f, 0x6c, 0x63, 0x6f, 0x88, 0x0a, 0xb6, 0x51, 0x44, 0x37, 0x26, 0xfb, 0xf1, 0xd9,
	0xbe, 0x3b, 0xdb, 0xe7, 0x0b, 0xeb, 0x3f, 0x27, 0xfb, 0xf1, 0xf3, 0xfd, 0x7c, 0x9e, 0x97, 0x8f,
	0x9f, 0xe7, 0xf3, 0x7c, 0x7d, 0xe0, 0xfe, 0x11, 0x41, 0x1d, 0xcd, 0x0f, 0x47, 0x38, 0x71, 0xac,
	0x5d, 0x94, 0xf8, 0x1c, 0x27, 0xe6, 0x32, 0xc2, 0x48, 0xfb, 0x88, 0x2c, 0x0c, 0x0b, 0xed, 0x92,
	0x2c, 0xaa, 0x22, 0xbe, 0x66, 0xd8, 0x8c, 0x6a, 0x5f, 0x45, 0x8c, 0x27, 0x30, 0x64, 0x15, 0x50,
	0x6b, 0xdd, 0x71, 0xc6, 0x47, 0x44, 0xd5, 0x84, 0x19, 0xdf, 0x29, 0xb3, 0x92, 0xc4, 0xcb, 0xd6,
	0x05, 0x06, 0xa1, 0x3a, 0x2a, 0x47, 0xf2, 0xbb, 0x54, 0xe3, 0xc7, 0x8c, 0x58, 0x5f, 0x4d, 0x9b,
	0xf9, 0x5c, 0x7e, 0x4c, 0xc1, 0xbf, 0x38, 0xbc, 0x75, 0x1d, 0xa8, 0xef, 0xe6, 0x77, 0x08, 0x1c,
	0x0f, 0x3b, 0x40, 0x2d, 0x9b, 0x51, 0x15, 0xf2, 0xfb, 0x87, 0x0f, 0xcd, 0x5a, 0x4c, 0xb4, 0x35,
	0x76, 0x36, 0x47, 0xec, 0x2e, 0xa2, 0x8c, 0xaa, 0xc4, 0x1a, 0x34, 0x54, 0xd7, 0xae, 0xd7, 0xa1,
	0x8d, 0x9a, 0xad, 0x7b, 0x37, 0x83, 0x5a, 0xfd, 0x01, 0x64, 0x01, 0x10, 0xa4, 0x1d, 0x5d, 0x0c,
	0x9f, 0x53, 0xe5, 0x71, 0xf2, 0xc2, 0x85, 0x5f, 0xbc, 0x43, 0x2c, 0xbe, 0xa3, 0xad, 0xb1, 0x73,
	0x41, 0x09, 0x42, 0xa4, 0x57, 0xda, 0xd1, 0x15, 0xd7, 0x2b, 0x6d, 0xe6, 0xc7, 0x63, 0x8b, 0x35,
	0xb4, 0xd0, 0x80, 0x6b, 0xd7, 0x83, 0xc3, 0xf9, 0x9c, 0xc0, 0xb1, 0x8a, 0x8a, 0x6f, 0x0c, 0x24,
	0x3a, 0x24, 0x14, 0xea, 0x9b, 0x14, 0x51, 0x93, 0xe2, 0xcb, 0x3f, 0x3d, 0x7d, 0xd2, 0x9b, 0x22,
	0xea, 0x4e, 0x11, 0x75, 0x52, 0x44, 0x1d, 0x14, 0xb8, 0x3e, 0xfc, 0x02, 0x68, 0xcc, 0xb2, 0xc3,
	0x7c, 0xd6, 0xe4, 0xf8, 0xe5, 0xa9, 0x43, 0xbd, 0x06, 0xc5, 0xc2, 0x52, 0x8a, 0x84, 0x5e, 0xcb,
	0xe2, 0x98, 0xaf, 0xa1, 0xb9, 0x98, 0x63, 0x4c, 0xca, 0x2a, 0xed, 0x06, 0x84, 0x09, 0x0e, 0xb2,
	0x56, 0x4d, 0xb8, 0x15, 0x84, 0xc6, 0x58, 0xce, 0xc4, 0x3e, 0xf5, 0xfc, 0xcb, 0x7d, 0x06, 0xf6,
	0x5d, 0xa5, 0xd8, 0x7d, 0x2c, 0x67, 0x21, 0xdf, 0xa5, 0x21, 0x12, 0x23, 0xf3, 0xea, 0x28, 0x2f,
	0xe7, 0x78, 0xb5, 0x7d, 0x8c, 0xe5, 0x4c, 0xec, 0x86, 0x31, 0xb3, 0x26, 0x1c, 0x02, 0x0d, 0x39,
	0x7e, 0x97, 0xca, 0x8c, 0x8a, 0x12, 0x39, 0x79, 0xf6, 0xe8, 0x03, 0x06, 0x30, 0x55, 0x0a, 0xdc,
	0xcf, 0xef, 0x52, 0x7b, 0x44, 0xa9, 0x18, 0x57, 0x8f, 0x0b, 0x8f, 0x8a, 0x92, 0x7d, 0x45, 0x4f,
	0xcf, 0xe1, 0x8a, 0x50, 0x06, 0x33, 0x0b, 0xb0, 0xcc, 0x88, 0x2c, 0xe6, 0x25, 0xf2, 0xc6, 0xfb,
	0xfb, 0x5e, 0xc5, 0xa3, 0x7e, 0xb7, 0x07, 0xfa, 0x26, 0xbd, 0x9e, 0x4e, 0xb1, 0x4c, 0x43, 0xf7,
	0x14, 0x53, 0x84, 0x0d, 0x8c, 0xd2, 0x7b, 0xba, 0x29, 0xe7, 0x88, 0x84, 0x47, 0x08, 0x30, 0x4f,
	0x12, 0xb3, 0x02, 0x37, 0xce, 0x64, 0x44, 0x79, 0x27, 0x2b, 0xa7, 0x85, 0xdc, 0x88, 0x39, 0x66,
	0xfb, 0xbe, 0xfe, 0xce, 0x6e, 0xcc, 0xde, 0x56, 0xca, 0x9e, 0x34, 0x42, 0x36, 0x5a, 0x11, 0xd6,
	0x08, 0x76, 0x6a, 0xa8, 0x1d, 0x37, 0x03, 0xa3, 0x86, 0x6d, 0xd4, 0xf2, 0x12, 0x73, 0x60, 0xe7,
	0x48, 0x6e, 0x68, 0xd4, 0x4b, 0xb5, 0x20, 0x64, 0xc9, 0x17, 0xbe, 0x48, 0x00, 0x98, 0xe6, 0x39,
	0x56, 0x52, 0xf2, 0x59, 0x56, 0xe5, 0x99, 0x51, 0x9e, 0x4d, 0xf3, 0x32, 0x79, 0xf0, 0xca, 0x9e,
	0xb7, 0x88, 0xc5, 0x44, 0xdb, 0xcc, 0xce, 0xd5, 0x8e, 0x36, 0xe2, 0xf7, 0x6d, 0xc0, 0x7a, 0x39,
	0x51, 0x46, 0x8d, 0xe7, 0x0a, 0xb1, 0x82, 0x98, 0xeb, 0x31, 0x82, 0x53, 0xe3, 0x12, 0x1f, 0xbb,
	0x4f, 0x43, 0x51, 0xdf, 0x77, 0xa2, 0x5d, 0x51, 0x59, 0x95, 0x6f, 0x77, 0x70, 0x87, 0x31, 0x37,
	0x3d, 0xcb, 0x51, 0x86, 0x11, 0xa1, 0x5a, 0x36, 0x85, 0x07, 0xcf, 0xec, 0xbd, 0x4c, 0x18, 0x6f,
	0xf7, 0x9d, 0x11, 0x6b, 0xe9, 0x19, 0x12, 0x72, 0xea, 0x16, 0x36, 0x9b, 0xe7, 0x63, 0xab, 0x35,
	0xd4, 0x19, 0x84, 0xde, 0x77, 0x12, 0x1f, 0x06, 0x2d, 0x22, 0xa7, 0xf2, 0xaa, 0x52, 0x98, 0x43,
	0x3e, 0x4d, 0x5e, 0xbb, 0x7a, 0x7d, 0xbf, 0x0f, 0xef, 0x1a, 0x0d, 0x75, 0x05, 0xe1, 0xc5, 0xb8,
	0x61, 0x0b, 0x97, 0x6e, 0xc6, 0x25, 0x1b, 0x0b, 0x05, 0xf0, 0x51, 0x30, 0x4b, 0x62, 0xb9, 0xed,
	0xc5, 0xec, 0xcf, 0x9e, 0x3d, 0xea, 0xc7, 0xbe, 0x56, 0x43, 0xab, 0x83, 0xb0, 0x9b, 0xc0, 0x0e,
	0xfa, 0x16, 0xb3, 0xc8, 0xe2, 0xa7, 0xde, 0x20, 0x40, 0x93, 0x73, 0x95, 0x83, 0xdb, 0x41, 0xbd,
	0x24, 0xf3, 0x19, 0x61, 0x17, 0xa9, 0xb7, 0x20, 0x14, 0x1b, 0xd4, 0x50, 0xd2, 0x9f, 0xcc, 0x5c,
	0xc1, 0x71, 0xd4, 0x23, 0xfe, 0x75, 0x71, 0x25, 0xda, 0xa4, 0x80, 0x6b, 0x8b, 0x16, 0xe2, 0x1a,
	0xa3, 0xcb, 0xf3, 0x3d, 0x17, 0x61, 0xc7, 0xfa, 0x4a, 0x7d, 0x13, 0xcb, 0x3b, 0xea, 0x2b, 0xef,
	0xdf, 0x5c, 0xfa, 0xfd, 0xb3, 0xff, 0x3b, 0x79, 0xbb, 0xad, 0xc7, 0xb7, 0x29, 0xef, 0x27, 0x6e,
	0xfe, 0xf9, 0x5c, 0x50, 0x79, 0xfb, 0xd0, 0xfb, 0xca, 0xfb, 0x21, 0x17, 0x79, 0x5f, 0xfa, 0xcf,
	0x87, 0xa3, 0x01, 0xd5, 0xed, 0x43, 0x5b, 0x59, 0xdd, 0x5f, 0x72, 0x53, 0xf7, 0xf1, 0xf3, 0x27,
	0xd8, 0x80, 0xe2, 0xf6, 0x21, 0xaf, 0x42, 0xdc, 0xd1, 0x60, 0xe2, 0x76, 0x25, 0xf3, 0x10, 0xb7,
	0x6b, 0x5d, 0x57, 0x71, 0x47, 0x2b, 0x8a, 0x3b, 0x1a, 0x2f, 0xd9, 0xd9, 0xa9, 0x53, 0x21, 0x00,
	0xec, 0x4d, 0x1b, 0x8e, 0x95, 0xe9, 0xe6, 0xd6, 0x77, 0x7e, 0xfd, 0xb4, 0x8f, 0x6e, 0x22, 0x1a,
	0xba, 0xd7, 0x7d, 0x8b, 0x0f, 0x22, 0x18, 0xd5, 0x45, 0x30, 0xb7, 0xce, 0xbc, 0x79, 0xd5, 0x87,
	0xb0, 0x43, 0x43, 0x61, 0x5f, 0xc2, 0xca, 0x52, 0xd9, 0xe9, 0x26, 0x95, 0xa3, 0x1f, 0xfc, 0xec,
	0x6d, 0x1f, 0xda, 0x95, 0x1a, 0x8a, 0xf8, 0xd2, 0x06, 0x10, 0x09, 0xfc, 0xb6, 0xb1, 0x87, 0x4b,
	0x12, 0x9f, 0x66, 0x74, 0x14, 0x06, 0x7b, 0x2a, 0x45, 0x65, 0xb9, 0xed, 0xe4, 0x5b, 0xbb, 0x6f,
	0x2c, 0x34, 0xb6, 0xf0, 0x2e, 0x6f, 0x4f, 0x15, 0x49, 0x1a, 0xc1, 0x7d, 0x52, 0x56, 0x31, 0x0a,
	0x07, 0xf5, 0xc8, 0xa1, 0x9c, 0x20, 0xe6, 0x1c, 0x2f, 0x92, 0x57, 0xfb, 0x8c, 0xd0, 0xb0, 0xfe,
	0x34, 0x8c, 0x9f, 0x1a, 0xbc, 0xf4, 0x6c, 0xc9, 0x05, 0x93, 0xba, 0x41, 0x80, 0xf9, 0x9e, 0x64,
	0xf0, 0x20, 0x01, 0x56, 0x78, 0xf4, 0x83, 0xc1, 0xe5, 0x7a, 0xb1, 0x51, 0x8a, 0x3b, 0x77, 0xfc,
	0xdd, 0x67, 0xfe, 0x85, 0x57, 0xc7, 0xf6, 0x2a, 0x7b, 0x47, 0xb7, 0xb9, 0xb5, 0x2f, 0xe9, 0x42,
	0x02, 0x37, 0x82, 0x45, 0x5e, 0x8d, 0xca, 0x0b, 0x39, 0x35, 0xda, 0x45, 0x7e, 0xfc, 0xb7, 0x1f,
	0x5e, 0xd3, 0x9b, 0x51, 0x4b, 0x53, 0x6e, 0xa8, 0x43, 0x46, 0xad, 0xd6, 0x89, 0x3b, 0xc0, 0x6c,
	0xb7, 0xa6, 0xc0, 0x45, 0x80, 0x4a, 0x0e, 0x24, 0x93, 0xf1, 0xee, 0xbe, 0x64, 0x62, 0x30, 0x81,
	0x62, 0xf1, 0xc4, 0x60, 0x0a, 0x6d, 0xd8, 0xcc, 0x0c, 0xf5, 0x0f, 0xc6, 0x53, 0x2d, 0xd3, 0x60,
	0x0c, 0x2c, 0x73, 0x7d, 0xde, 0x9b, 0xdc, 0xd2, 0xc5, 0xc4, 0xb7, 0x26, 0x13, 0xbd, 0x1b, 0x7a,
	0x53, 0x4c, 0xff, 0x50, 0x22, 0xd1, 0x42, 0x50, 0x73, 0x34, 0x04, 0xcb, 0x1f, 0xc0, 0x28, 0x58,
	0xe2, 0x8a, 0x41, 0x0f, 0x0c, 0xa5, 0xe2, 0x34, 0x83, 0x12, 0x71, 0x3a, 0xd5, 0x52, 0x43, 0x35,
	0x6b, 0xa8, 0xc9, 0x59, 0xe4, 0xc7, 0x1d, 0x2d, 0xe1, 0xbe, 0xa3, 0xc0, 0x5d, 0xf2, 0x00, 0xae,
	0x05, 0xad, 0xee, 0x18, 0x7d, 0xce, 0xf0, 0x5a, 0xaa, 0x45, 0x43, 0x33, 0x8a, 0xca, 0x60, 0x02,
	0xac, 0x70, 0x8d, 0x8c, 0xf7, 0xa7, 0xe8, 0x81, 0xe4, 0x36, 0xc6, 0x28, 0x62, 0x7a, 0xfb, 0xbb,
	0x7b, 0x37, 0xa0, 0xd4, 0x00, 0xdd, 0xd2, 0x40, 0x51, 0x1a, 0x9a, 0xe7, 0xf1, 0x14, 0x46, 0xc0,
	0x42, 0x57, 0xb4, 0xfe, 0x01, 0x5c, 0xb5, 0x25, 0x44, 0x35, 0x6a, 0xa8, 0xa1, 0x70, 0x4b, 0x69,
	0xb5, 0x60, 0x46, 0xd1, 0xc1, 0x03, 0xf6, 0x16, 0xce, 0x2b, 0xc6, 0x2f, 0xf9, 0xf1, 0xe9, 0x8b,
	0xd0, 0x50, 0xdf, 0x52, 0xdf, 0xf3, 0x0a, 0xbe, 0xeb, 0x99, 0x66, 0x1e, 0x4e, 0x8c, 0x3b, 0xb8,
	0x0c, 0x34, 0x61, 0x28, 0x53, 0x43, 0x7f, 0x3f, 0xff, 0xd2, 0x77, 0x0d, 0x0d, 0xf5, 0x4c, 0xa3,
	0x31, 0x09, 0x96, 0x0d, 0xbc, 0xbf, 0xf8, 0x8c, 0x84, 0x17, 0x61, 0xca, 0x9b, 0xd0, 0x79, 0x04,
	0x6a, 0x7d, 0xb3, 0x06, 0xd4, 0x61, 0xbe, 0x66, 0xd0, 0x88, 0xc7, 0xa3, 0xa0, 0xaa, 0x55, 0x80,
	0x34, 0x07, 0xa8, 0x0a, 0x19, 0x2d, 0x03, 0x10, 0x07, 0x55, 0xd2, 0x8d, 0x13, 0x3d, 0xb0, 0x50,
	0x96, 0x83, 0x3b, 0xcd, 0xa0, 0x8a, 0xca, 0x58, 0x0f, 0x16, 0xe2, 0xaa, 0x53, 0x93, 0xc2, 0xdd,
	0x60, 0x26, 0x2e, 0xf2, 0x98, 0xfb, 0xd8, 0x74, 0x50, 0x67, 0x0c, 0x23, 0x75, 0xb9, 0x06, 0x34,
	0x14, 0x4e, 0x88, 0x50, 0x2c, 0xdb, 0xc6, 0xf6, 0x1c, 0xf9, 0xed, 0x91, 0x40, 0xbb, 0x4a, 0xf9,
	0x79, 0x32, 0xc8, 0x46, 0x96, 0x77, 0xd9, 0xc8, 0xce, 0xee, 0x7d, 0x3c, 0xea, 0xcd, 0x68, 0x9f,
	0xbf, 0x3c, 0x19, 0x2b, 0xef, 0x64, 0xe3, 0x6e, 0x3b, 0xd9, 0x5f, 0xcf, 0xbc, 0x72, 0xcc, 0xa7,
	0xab, 0xab, 0x34, 0xd4, 0x51, 0x81, 0x38, 0x88, 0xe1, 0x39, 0x41, 0x80, 0x46, 0xc7, 0x89, 0x1c,
	0xaa, 0xa0, 0x51, 0x3f, 0xc4, 0xb3, 0xe9, 0xb4, 0xcc, 0x2b, 0x4a, 0x99, 0xe9, 0x71, 0xe1, 0x32,
	0xfd, 0x8e, 0x5e, 0x60, 0x46, 0x3d, 0xe2, 0x59, 0xd7, 0x51, 0x89, 0x06, 0x63, 0x2c, 0x87, 0xf0,
	0x35, 0x5c, 0xed, 0x4c, 0x1d, 0xe0, 0x57, 0x8e, 0xf4, 0xca, 0x1b, 0xd8, 0x79, 0x01, 0xea, 0x0f,
	0x33, 0xc0, 0x74, 0xf3, 0x5c, 0x0e, 0x9f, 0x23, 0x00, 0xe4, 0x73, 0x65, 0x86, 0xfe, 0xf2, 0xe4,
	0xc4, 0x92, 0xdb, 0xf1, 0xf3, 0x5d, 0x1a, 0x5a, 0xe9, 0x95, 0x49, 0x30, 0x87, 0xd9, 0xc1, 0x6a,
	0x59, 0x79, 0x47, 0x99, 0x69, 0xe5, 0x77, 0x81, 0x19, 0x42, 0x4e, 0xe5, 0xe5, 0x0c, 0xcb, 0xf1,
	0x8c, 0xcc, 0x67, 0xc8, 0xc7, 0xfe, 0xfd, 0x95, 0x27, 0xf1, 0xfc, 0xde, 0xe3, 0x91, 0x6b, 0x88,
	0xf4, 0x16, 0x02, 0x68, 0x3e, 0x13, 0x5b, 0xae, 0xa1, 0xff, 0xf7, 0x6c, 0x89, 0x05, 0x1d, 0x96,
	0xf9, 0x0c, 0xdd, 0x24, 0x38, 0x02, 0x21, 0xaf, 0xbb, 0x4a, 0x6b, 0x46, 0xff, 0xb4, 0xff, 0x07,
	0x8a, 0xc1, 0x3a, 0xc7, 0x56, 0xd5, 0xa0, 0x2a, 0x0b, 0xb9, 0x11, 0xac, 0xab, 0x15, 0x1a, 0x5a,
	0x5e, 0xa1, 0xc3, 0x82, 0x64, 0x4d, 0x62, 0x48, 0x90, 0x0a, 0x73, 0x28, 0x14, 0x2b, 0xe7, 0xe5,
	0xc9, 0xeb, 0x27, 0x09, 0x3f, 0xa2, 0xb0, 0x86, 0x3e, 0x53, 0x81, 0xc8, 0x4b, 0x2e, 0x47, 0x08,
	0xd0, 0x2c, 0xca, 0xc2, 0x88, 0x90, 0x63, 0x8c, 0x1c, 0x1f, 0x27, 0x66, 0xc9, 0xaf, 0x3d, 0x73,
	0x6d, 0xab, 0x31, 0xd1, 0xf7, 0xf9, 0x4c, 0x34, 0x4e, 0xa3, 0xe8, 0x13, 0xab, 0xf4, 0xf6, 0x0f,
	0xa6, 0x50, 0x22, 0x91, 0xa4, 0x07, 0x52, 0x03, 0x1b, 0x06, 0x12, 0xa9, 0x6d, 0xc9, 0xb8, 0xc3,
	0x1d, 0x7a, 0x36, 0x09, 0xd3, 0x86, 0x0b, 0xb4, 0xf4, 0x4c, 0x5c, 0x90, 0x34, 0xef, 0xb1, 0x37,
	0xcc, 0x2b, 0xa3, 0x6e, 0xde, 0xf0, 0xbd, 0x89, 0x13, 0x7f, 0xc1, 0xf9, 0x9d, 0x95, 0x5e, 0x33,
	0x9e, 0x34, 0x42, 0xdd, 0x9c, 0xa1, 0x7d, 0xb0, 0xf4, 0x6c, 0x1b, 0xe6, 0x75, 0xf3, 0x86, 0x2e,
	0xa8, 0xd4, 0x2d, 0xfd, 0xa8, 0xe3, 0xd4, 0x89, 0x02, 0x42, 0x96, 0x6e, 0xc8, 0x1f, 0xfd, 0xea,
	0x27, 0xbb, 0x7d, 0xa7, 0x6f, 0x9d, 0x86, 0xd6, 0x04, 0x93, 0x63, 0x61, 0x85, 0xb0, 0x45, 0x69,
	0xf3, 0xc0, 0x87, 0x40, 0x93, 0x92, 0x1f, 0xb6, 0x79, 0xaf, 0x7e, 0xe3, 0x9f, 0xc7, 0x7d, 0x56,
	0xbd, 0xf5, 0x1a, 0x5a, 0x57, 0x1d, 0xab, 0x13, 0x9d, 0x2e, 0xe2, 0xa2, 0xfe, 0xa1, 0xbb, 0x63,
	0xaf, 0x01, 0x87, 0x07, 0x74, 0x77, 0xec, 0x3e, 0x93, 0x0c, 0x2e, 0x2f, 0x71, 0xc7, 0xe7, 0x3e,
	0x7a, 0x65, 0x91, 0xa1, 0xc0, 0x15, 0xd5, 0xcc, 0x2e, 0xdd, 0xe6, 0x36, 0x3b, 0x49, 0x17, 0x02,
	0x18, 0x07, 0x8b, 0xbc, 0x1a, 0x64, 0xba, 0x9a, 0x77, 0x2f, 0x9e, 0x9b, 0x6b, 0x1a, 0x63, 0xb7,
	0x7e, 0x39, 0x8c, 0xb1, 0xcb, 0x63, 0xc3, 0x18, 0x0f, 0x0d, 0xf6, 0xf8, 0x1a, 0x63, 0xb7, 0xe7,
	0xd5, 0x1a, 0x63, 0x37, 0x8c, 0x20, 0xc6, 0xd8, 0x83, 0xbb, 0x2a, 0x63, 0xec, 0x8a, 0x11, 0xc8,
	0x18, 0xbb, 0x45, 0x4e, 0xdd, 0x18, 0xbb, 0xa1, 0x79, 0x19, 0xe3, 0x4f, 0xea, 0x40, 0x93, 0x33,
	0xfd, 0xac, 0x4b, 0x73, 0xce, 0x30, 0xcb, 0x6d, 0xcf, 0x4b, 0x4c, 0x89, 0x3f, 0x7a, 0xfa, 0xd2,
	0xef, 0x26, 0x7c, 0x5e, 0x9f, 0x0d, 0x1a, 0xfa, 0x5c, 0x90, 0xa4, 0xb5, 0xb9, 0xa0, 0x60, 0x8e,
	0x70, 0x89, 0x65, 0x82, 0xb8, 0xb8, 0xa8, 0x45, 0x2c, 0xa8, 0xe3, 0xc4, 0xac, 0x28, 0x93, 0x07,
	0x4e, 0x9f, 0x51, 0x82, 0x98, 0x96, 0x40, 0xfc, 0x06, 0x24, 0x8d, 0x91, 0xe1, 0x1e, 0xc2, 0xf1,
	0x15, 0xe0, 0xea, 0xc5, 0x73, 0x69, 0x63, 0x25, 0x5d, 0xe6, 0x97, 0xa7, 0x77, 0x7e, 0x12, 0x28,
	0x5f, 0xaf, 0x3c, 0xa8, 0x7d, 0xbe, 0x18, 0x50, 0x1a, 0x61, 0x1b, 0x8e, 0x9d, 0xa0, 0x7e, 0x27,
	0x2f, 0x8c, 0x8c, 0xaa, 0xe4, 0x81, 0xf7, 0x26, 0xbf, 0xe8, 0xdd, 0xe7, 0x4d, 0x1a, 0xea, 0x9e,
	0x22, 0xb1, 0x39, 0x0c, 0x98, 0x86, 0x36, 0xe9, 0xa8, 0xcb, 0x04, 0x00, 0x76, 0xc7, 0x74, 0xe3,
	0x53, 0x27, 0xe4, 0xd2, 0x3c, 0xce, 0x50, 0xd5, 0xc6, 0x1e, 0x27, 0x34, 0xa4, 0x11, 0x53, 0x65,
	0xb4, 0xd6, 0xea, 0x34, 0x5f, 0x48, 0x5e, 0x55, 0x0f, 0x62, 0x44, 0xd3, 0xb8, 0x55, 0xf0, 0x01,
	0xc7, 0xb4, 0xd5, 0xf8, 0xfa, 0x9d, 0xa2, 0x39, 0xb3, 0x07, 0xfd, 0x24, 0x01, 0x9a, 0x4b, 0xbe,
	0xbe, 0x40, 0x01, 0xd4, 0x08, 0x69, 0xb3, 0xc3, 0xdb, 0x34, 0xb4, 0x25, 0x50, 0x4b, 0x0b, 0x7d,
	0x4b, 0x07, 0xeb, 0x98, 0x90, 0xa6, 0x6b, 0x84, 0x34, 0x8c, 0x95, 0x1d, 0x42, 0x70, 0x2f, 0x16,
	0xf8, 0xf5, 0xa2, 0xf8, 0x5c, 0x41, 0xbd, 0x50, 0x3c, 0x65, 0x0f, 0x16, 0xcf, 0x58, 0xb9, 0x42,
	0x82, 0x4d, 0x88, 0xd7, 0x88, 0x77, 0x96, 0x8d, 0xf8, 0x3c, 0x8f, 0xb6, 0xda, 0x83, 0x7c, 0xb8,
	0x19, 0xcc, 0x71, 0xfd, 0xc8, 0x04, 0x65, 0x30, 0x5d, 0x90, 0x98, 0xb4, 0xc2, 0x49, 0xe4, 0x6b,
	0x27, 0x9f, 0x9a, 0xe5, 0x2d, 0x74, 0xa4, 0xa1, 0xcf, 0x56, 0xf9, 0x29, 0xca, 0xea, 0x9d, 0x14,
	0xd6, 0x09, 0xe8, 0x7a, 0x41, 0xea, 0x56, 0x38, 0x09, 0x3e, 0x0c, 0x42, 0x82, 0xc4, 0x98, 0x89,
	0xd7, 0xa7, 0x6e, 0x1e, 0x7e, 0xdf, 0xd7, 0x8a, 0xd8, 0xab, 0xda, 0x54, 0x88, 0xcd, 0x1c, 0x6c,
	0x83, 0x20, 0x25, 0x71, 0x16, 0xf6, 0x5b, 0x04, 0xe8, 0x30, 0xd8, 0xb1, 0xa5, 0x63, 0xec, 0x6f,
	0xce, 0xf8, 0xf4, 0x34, 0xc6, 0xaa, 0xdc, 0xa8, 0xaa, 0x7b, 0x48, 0x41, 0xb2, 0xec, 0xe7, 0xcd,
	0xe7, 0x5e, 0x7d, 0xbe, 0xf2, 0x87, 0x83, 0xa4, 0x01, 0xd0, 0xa7, 0x03, 0x60, 0x13, 0x9a, 0x2c,
	0xf8, 0xcf, 0x9e, 0x69, 0x74, 0x44, 0x6f, 0x01, 0x86, 0x1b, 0x08, 0x40, 0x09, 0x3b, 0x01, 0x74,
	0x36, 0xd3, 0xb4, 0x00, 0xda, 0xf5, 0x37, 0x2e, 0x14, 0x12, 0x1b, 0x2d, 0x36, 0xa2, 0x99, 0xdd,
	0x78, 0x14, 0x34, 0x66, 0xbb, 0x98, 0xb4, 0xa2, 0x32, 0x92, 0x28, 0xab, 0xe4, 0xe9, 0xc9, 0xa3,
	0x9f, 0xf8, 0x6c, 0x17, 0x71, 0x0d, 0xc5, 0xa6, 0x38, 0xb0, 0xd9, 0xae, 0x70, 0x5a, 0x51, 0xc3,
	0x3a, 0x0b, 0x1d, 0xca, 0x76, 0x75, 0x2b, 0x6a, 0x52, 0x94, 0x55, 0x93, 0x5f, 0x91, 0x39, 0xcc,
	0xff, 0xfa, 0xeb, 0x1f, 0x4c, 0x7e, 0x6a, 0xfc, 0x8a, 0xcc, 0x59, 0xfc, 0x83, 0x32, 0x67, 0xf0,
	0xef, 0x26, 0x8a, 0x4f, 0x29, 0x2f, 0x1e, 0x99, 0xe8, 0xf3, 0x93, 0xd6, 0x6d, 0xb4, 0xc0, 0xeb,
	0xf0, 0x32, 0x02, 0x66, 0x3b, 0xec, 0x9b, 0x65, 0xf1, 0xc8, 0x53, 0x07, 0x3f, 0x3c, 0xe4, 0x91,
	0x5c, 0x75, 0x7d, 0x31, 0x23, 0x96, 0x7b, 0xeb, 0x21, 0x68, 0x38, 0x56, 0xb8, 0xe9, 0x2b, 0x00,
	0xc2, 0x0e, 0x30, 0xcb, 0x41, 0x64, 0xca, 0xe3, 0x85, 0x1f, 0x9f, 0x7b, 0x1b, 0xcb, 0x83, 0xa0,
	0x9b, 0xad, 0x20, 0x53, 0x1d, 0x32, 0x98, 0x6e, 0x44, 0xa8, 0x1c, 0x79, 0xf3, 0xf4, 0xb1, 0xa5,
	0x9f, 0xca, 0xab, 0x6e, 0x9c, 0x4e, 0x54, 0x8e, 0xae, 0xd7, 0x2f, 0x52, 0x1c, 0x7c, 0x8c, 0x28,
	0x5b, 0x5f, 0xaf, 0xec, 0xff, 0xe3, 0xb6, 0x20, 0xfb, 0x69, 0x70, 0xee, 0x00, 0xa9, 0x9f, 0x27,
	0x09, 0x97, 0xdc, 0xcf, 0x95, 0x63, 0xe7, 0x07, 0xbd, 0x5b, 0xd2, 0xab, 0xa1, 0x8d, 0x53, 0x6b,
	0x49, 0xe5, 0x94, 0xd0, 0x57, 0x09, 0xb7, 0x9c, 0xd0, 0x47, 0xdf, 0x9b, 0x78, 0xcd, 0xe7, 0x7d,
	0xf9, 0xbc, 0x86, 0x36, 0x4d, 0xad, 0x41, 0x01, 0x52, 0x45, 0xad, 0x3f, 0xaf, 0x01, 0x21, 0x4b,
	0x73, 0xf0, 0x4e, 0xd0, 0x6c, 0xd9, 0x57, 0xeb, 0x84, 0xb0, 0x06, 0x2c, 0xb0, 0x0b, 0xab, 0x39,
	0x16, 0xdc, 0x0b, 0xe6, 0xda, 0x81, 0x95, 0xce, 0x02, 0xa5, 0x2c, 0x81, 0x0f, 0x00, 0x61, 0x30,
	0xcf, 0x11, 0x58, 0xd1, 0xf5, 0x23, 0xb0, 0xc4, 0xae, 0x3e, 0x35, 0xab, 0xbf, 0x14, 0x40, 0x1b,
	0xc2, 0x2b, 0xf9, 0x39, 0x03, 0x34, 0x3a, 0x16, 0xf2, 0x58, 0x13, 0x00, 0xf6, 0x7b, 0x4b, 0x3d,
	0x51, 0x03, 0x48, 0xaf, 0x7f, 0x7f, 0xc0, 0x7d, 0x25, 0xde, 0x2f, 0xaf, 0x21, 0x79, 0xaa, 0x3b,
	0xa1, 0xc3, 0x60, 0x04, 0x0f, 0x2e, 0xf2, 0x1d, 0x0f, 0x7a, 0xff, 0xb5, 0x05, 0xdb, 0x90, 0xff,
	0x0b, 0xb4, 0xb0, 0x79, 0xfc, 0x3f, 0x65, 0xb8, 0xde, 0x18, 0xa1, 0x55, 0xff, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x73, 0xd8, 0x51, 0xc7, 0xc4, 0x26, 0x00, 0x00,
}
